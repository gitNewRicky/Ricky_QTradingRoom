/* 
 * Copyright (C)2017 PT. Stosia Teknologi Investasi
 *
 * This file is licensed under  GNU GPL (General Public License) version 3.
 *
 * File ini dilisensikan kepada Anda, bukan  Anda miliki.  Pemilik file ini
 * adalah pemegang  hak cipta ("copyright holder") di atas. Gunakanlah file
 * ini sesuai dengan lisensi yang telah ditetapkan untuk file ini.
 *
 * File ini  berlisensi  GNU GPL (General Public License)  versi 3. Artinya
 * kalau Anda  memodifikasi file ini, atau membuat karya lain yang berbasis
 * file ini  ("derivative work"),  maka Anda  wajib  mendistribusikan  kode
 * modifikasi atau karya tersebut kepada publik. Hal ini untuk menjaga agar
 * pengetahuan yang ada di sini menjadi lebih berkembang  di masa mendatang 
 * untuk kemajuan kita bersama.
 *
 * Silakan memakai kode ini untuk kepentingan apapun termasuk untuk mencari
 * profit di pasar saham baik secara perorangan atau organisasi, asal tidak
 * jahat. Sebagai tambahan permintaan, kami menghimbau untuk TIDAK  menjual
 * kode/file  ini secara  apa adanya  atau dalam bundel  produk yang dijual
 * secara komersial, karena hal itu tidak etis.
 *
 * Untuk penjelasan lebih lanjut silakan bertanya kepada kami.  Untuk detil
 * lisensi GPLv3  silakan lihat file GPLv3-LICENSE.md  yang didistribusikan
 * bersama file ini.
 *
 * Author: Benny Prijono <benny@stosia.com>
 * Contributors:
 *  - 
 */
_t0 = GetPerformanceCounter();

#include_once <..\Quant.id\AFL\Common.afl>
#include_once <..\Quant.id\AFL\ForeignFlow\ForeignFlowCommon.afl>



_SECTION_BEGIN("Foreign Net");
	stSetBackgroundTitle(Name() + " " + _SECTION_NAME());
	stSetBackgroundSubtitle(QID_VERSION_LINE);
	
	S = stGetFFIntervalSellValue();
	B = stGetFFIntervalBuyValue();

	bcolor = ColorBlend( colorBlueGrey, GetChartBkColor(), 0.5  );
	scolor = ColorBlend( colorLightOrange, GetChartBkColor(), 0.5  );

	showBuySell = ParamToggle("Show Buy/Sell Value", "No|Yes", 1);

	Net = B-S;
	
	if (showBuySell)
		maxNet = Max(Max(HighestVisibleValue(B), HighestVisibleValue(S)), HighestVisibleValue(abs(Net)));
	else
		maxNet = HighestVisibleValue(abs(Net));
	minNet = 0;
	
	Plot(stAutoPrec(abs(Net)), "NetPlot", IIf(B >= S, colorBlueGrey, colorLightOrange), 
		 styleHistogram | styleNoTitle, 
		 minNet, maxNet, 0, 4, 5);
	Plot(Net, "Net " + WriteIf(B >= S, "Buy", "Sell") + " (B Rp)", IIf(B >= S, colorBlueGrey, colorLightOrange), styleNoDraw | styleOwnScale);
	
	//Plot(B, "Buy", bcolor, styleLine | styleNoTitle, minNet, maxNet, 0, 1, 1);
	//Plot(S, "Sell", scolor, styleLine | styleNoTitle, minNet, maxNet, 0, 1, 1);
	
	if (showBuySell) {
		PlotOHLC( Min(B,S), Min(B,S), Max(B, S), Max(B, S), "BS", 
				  IIf(Ref(B,1) >= Ref(S,1), bcolor, scolor), 
				  styleCloud | styleNoLabel | styleNoTitle | styleOwnScale, 
				  minNet, maxNet, 0, 2, 1);
	}
	
	/*
	maper1 = Param("Vol MA Period1", 5, 5, 60);
	maper2 = Param("Vol MA Period2", 20, 5, 60);
	
	Plot(MA(Max(B,S), maper1), "MA" + maper1, ColorBlend(colorRed, GetChartBkColor(), 0.5), styleLine, Null, Null, 0, 3);
	Plot(MA(Max(B,S), maper2), "MA" + maper2, ColorBlend(colorRed, GetChartBkColor(), 0.5), styleDashed, Null, Null, 0, 3);
	*/
	
_SECTION_END();

_t1 = GetPerformanceCounter();
_TRACE(Name() + " Foreign net: " + Int(_t1 - _t0) + " ms");
