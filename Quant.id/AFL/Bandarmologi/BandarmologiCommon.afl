/* 
 * Copyright (C)2017 PT. Stosia Teknologi Investasi
 *
 * This file is licensed under  GNU GPL (General Public License) version 3.
 *
 * File ini dilisensikan kepada Anda, bukan  Anda miliki.  Pemilik file ini
 * adalah pemegang  hak cipta ("copyright holder") di atas. Gunakanlah file
 * ini sesuai dengan lisensi yang telah ditetapkan untuk file ini.
 *
 * File ini  berlisensi  GNU GPL (General Public License)  versi 3. Artinya
 * kalau Anda  memodifikasi file ini, atau membuat karya lain yang berbasis
 * file ini  ("derivative work"),  maka Anda  wajib  mendistribusikan  kode
 * modifikasi atau karya tersebut kepada publik. Hal ini untuk menjaga agar
 * pengetahuan yang ada di sini menjadi lebih berkembang  di masa mendatang 
 * untuk kemajuan kita bersama.
 *
 * Silakan memakai kode ini untuk kepentingan apapun termasuk untuk mencari
 * profit di pasar saham baik secara perorangan atau organisasi, asal tidak
 * jahat. Sebagai tambahan permintaan, kami menghimbau untuk TIDAK  menjual
 * kode/file  ini secara  apa adanya  atau dalam bundel  produk yang dijual
 * secara komersial, karena hal itu tidak etis.
 *
 * Untuk penjelasan lebih lanjut silakan bertanya kepada kami.  Untuk detil
 * lisensi GPLv3  silakan lihat file GPLv3-LICENSE.md  yang didistribusikan
 * bersama file ini.
 *
 * Author: Benny Prijono <benny@stosia.com>
 * Contributors:
 *  - 
 */

#include_once <..\Quant.id\AFL\Tools.afl>

_N(ST_RETAIL_BROKERS = "'YP', 'PD', 'NI', 'KK'");
_N(ST_MULTI_BROKERS = "AI,AK,BK,CG,CS,DB,DP,DR,FG,GW,KZ,ML,MS,RX,YU,ZP");

//
// Calculate start date, that is "days" prior to last date
//
function stBdGetStartDate(days)
{
	cur_dn = SelectedValue(DateNum());
	latest_date = DateTimeConvert(2, cur_dn);
	
	sd = DateTimeAdd(latest_date, -days, inDaily);
	return stDateTimeToISODate(sd);
}


//
// Get broker's cummulative buy shares
//
function stBdGetBrokerCumBuyShares(broker_name, start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		
		_N( sql = " SELECT @running_total := @running_total + int_buy_vol AS cum_buy, \n" + 
				  "        dtime \n" + 
				  " FROM  v_adj_intraday_broker \n" +
				  "	JOIN (SELECT @running_total := 0.0) r \n" + 
				  " WHERE nationality = 'A' AND board = 'R' AND ticker = '" + Name() + "' AND broker = '" + broker_name + "' AND \n" +
				  "       dtime >= '" + start_date_str + " 00:00:00' \n" +
				  stSQLDateTimeFilter() +
				  " ORDER BY dtime Asc" );
		
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		
		_N( sql = " SELECT @running_total := @running_total + day_buy_vol AS cum_buy, \n" + 
				  "        dtime \n" + 
				  " FROM  v_adj_intraday_broker \n" +
				  "	JOIN (SELECT @running_total := 0.0) r \n" + 
				  " WHERE nationality = 'A' AND board = 'R' AND ticker = '" + Name() + "' AND broker = '" + broker_name + "' AND \n" +
				  "       dtime >= '" + start_date_str + " 00:00:00' \n" +
				  stSQLDateTimeFilter() +
				  " ORDER BY dtime Asc" );
	}
	
	
	varName = "BdCumBuyShares-" + broker_name;
	result = stCachedSQL(varName, sql);
	
	return result;
}

//
// Get broker's cummulative buy value in Milyar Rp
//
function stBdGetBrokerCumBuyValue(broker_name, start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N( sql = " SELECT @running_total := @running_total + int_buy_value AS cum_buy, \n" + 
				  "        dtime \n" + 
				  " FROM  v_adj_intraday_broker \n" +
				  "	JOIN (SELECT @running_total := 0.0) r \n" + 
				  " WHERE nationality = 'A' AND board = 'R' AND ticker = '" + Name() + "' AND broker = '" + broker_name + "' AND \n" +
				  "       dtime >= '" + start_date_str + " 00:00:00' \n" +
				  stSQLDateTimeFilter() +
				  " ORDER BY dtime Asc" );
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N( sql = " SELECT @running_total := @running_total + day_buy_value AS cum_buy, \n" + 
				  "        dtime \n" + 
				  " FROM  v_adj_intraday_broker \n" +
				  "	JOIN (SELECT @running_total := 0.0) r \n" + 
				  " WHERE nationality = 'A' AND board = 'R' AND ticker = '" + Name() + "' AND broker = '" + broker_name + "' AND \n" +
				  "       dtime >= '" + start_date_str + " 00:00:00' \n" +
				  stSQLDateTimeFilter() +
				  " ORDER BY dtime Asc" );
	}
	
	varName = "BdCumBuyValue-" + broker_name;
	result = stCachedSQL(varName, sql) / MILYAR;
	
	return result;
}

//
// Get broker's cummulative sell shares
//
function stBdGetBrokerCumSellShares(broker_name, start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N( sql = " SELECT @running_total := @running_total + int_sell_vol AS cum_sell, \n" + 
				  "        dtime \n" + 
				  " FROM  v_adj_intraday_broker \n" +
				  "	JOIN (SELECT @running_total := 0.0) r \n" + 
				  " WHERE nationality = 'A' AND board = 'R' AND ticker = '" + Name() + "' AND broker = '" + broker_name + "' AND \n" +
				  "       dtime >= '" + start_date_str + " 00:00:00' \n" +
				  stSQLDateTimeFilter() +
				  " ORDER BY dtime Asc" );
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N( sql = " SELECT @running_total := @running_total + day_sell_vol AS cum_sell, \n" + 
				  "        dtime \n" + 
				  " FROM  v_adj_intraday_broker \n" +
				  "	JOIN (SELECT @running_total := 0.0) r \n" + 
				  " WHERE nationality = 'A' AND board = 'R' AND ticker = '" + Name() + "' AND broker = '" + broker_name + "' AND \n" +
				  "       dtime >= '" + start_date_str + " 00:00:00' \n" +
				  stSQLDateTimeFilter() +
				  " ORDER BY dtime Asc" );
	}
	
	varName = "BdCumSellShares-" + broker_name;
	result = stCachedSQL(varName, sql);
	
	return result;
}

//
// Get broker's cummulative sell value in Milyar Rp
//
function stBdGetBrokerCumSellValue(broker_name, start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N( sql = " SELECT @running_total := @running_total + int_sell_value AS cum_sell, \n" + 
				  "        dtime \n" + 
				  " FROM  v_adj_intraday_broker \n" +
				  "	JOIN (SELECT @running_total := 0.0) r \n" + 
				  " WHERE nationality = 'A' AND board = 'R' AND ticker = '" + Name() + "' AND broker = '" + broker_name + "' AND \n" +
				  "       dtime >= '" + start_date_str + " 00:00:00' \n" +
				  stSQLDateTimeFilter() + 
				  " ORDER BY dtime Asc" );
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N( sql = " SELECT @running_total := @running_total + day_sell_value AS cum_sell, \n" + 
				  "        dtime \n" + 
				  " FROM  v_adj_intraday_broker \n" +
				  "	JOIN (SELECT @running_total := 0.0) r \n" + 
				  " WHERE nationality = 'A' AND board = 'R' AND ticker = '" + Name() + "' AND broker = '" + broker_name + "' AND \n" +
				  "       dtime >= '" + start_date_str + " 00:00:00' \n" +
				  stSQLDateTimeFilter() + 
				  " ORDER BY dtime Asc" );
	}
	
	varName = "BdCumSellValue-" + broker_name;
	result = stCachedSQL(varName, sql) / MILYAR;
	
	return result;
}

//
// Get broker's cummulative ownership shares in Lot
//
function stBdGetBrokerCumShares(broker_name, start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
	}
	
	// Randomize the order to get better parallelism
	if (LastValue(Random()) < 0.5) {
		cumBuy = stBdGetBrokerCumBuyShares(broker_name, start_date_str);
		cumSell = stBdGetBrokerCumSellShares(broker_name, start_date_str);
	} else {
		cumSell = stBdGetBrokerCumSellShares(broker_name, start_date_str);
		cumBuy = stBdGetBrokerCumBuyShares(broker_name, start_date_str);
	}

	//balance = cumBuy - cumSell;
	buyShares = stGetIntervalFromCum(cumBuy);
	sellShares = stGetIntervalFromCum(cumSell);
	
	balance = stGetHolding(buyShares, sellShares);
	
	return balance;
}

//
// Get broker's cummulative ownership value in Milyar Rp
//
function stBdGetBrokerCumValue(broker_name, start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
	}
	
	// Randomize the order to get better parallelism
	if (LastValue(Random()) < 0.5) {
		cumBuy = stBdGetBrokerCumBuyValue(broker_name, start_date_str);
		cumSell = stBdGetBrokerCumSellValue(broker_name, start_date_str);
	} else {
		cumSell = stBdGetBrokerCumSellValue(broker_name, start_date_str);
		cumBuy = stBdGetBrokerCumBuyValue(broker_name, start_date_str);
	}

	buyValue = stGetIntervalFromCum(cumBuy);
	sellValue = stGetIntervalFromCum(cumSell);
	
	balance = stGetHolding(buyValue, sellValue);
	return balance;
}

//
// Get broker average price based on buy volume, buy avg, and sell volume.
// This also calculates broker's profit/loss and save it to global variable stBrokerProfit
//
function stBdGetBrokerAveragePrice(broker_name, start_date_str)
{
	global stBrokerProfit;
	
	isIntraday = Interval() < inDaily;
	if (isIntraday) {
		_N(col = "int");
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N(col = "day");
	}

	cumBuyShares = stBdGetBrokerCumBuyShares(broker_name, start_date_str);
	buyShares = stGetIntervalFromCum(cumBuyShares);
	
	cumBuyValue = stBdGetBrokerCumBuyValue(broker_name, start_date_str) * MILYAR;
	buyValue = stGetIntervalFromCum(cumBuyValue);

	cumSellShares = stBdGetBrokerCumSellShares(broker_name, start_date_str);
	sellShares = stGetIntervalFromCum(cumSellShares);

	cumSellValue = stBdGetBrokerCumSellValue(broker_name, start_date_str) * MILYAR;
	sellValue = stGetIntervalFromCum(cumSellValue);
	
	avgPrice = stGetAvgPrice(buyValue, buyShares, sellValue, sellShares);
	stBrokerProfit = stProfit;
	
	return avgPrice;
}

//
// Get cummulative retail buy value in Milyar Rp
//
function stBdGetRetailCumBuyValue(start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N(sql = "   SELECT @running_total := @running_total + SUM(int_buy_value) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N(sql = "   SELECT @running_total := @running_total + SUM(day_buy_value) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	}
	
	varName = "BdCumBuyValue-Retail";
	result = stCachedSQL(varName, sql) / MILYAR;
	return result;
}

//
// Get cummulative retail sell value in Milyar Rp
//
function stBdGetRetailCumSellValue(start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N(sql = "   SELECT @running_total := @running_total + SUM(int_sell_value) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N(sql = "   SELECT @running_total := @running_total + SUM(day_sell_value) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	}
	
	varName = "BdCumSellValue-Retail";
	result = stCachedSQL(varName, sql) / MILYAR;
	return result;
}

//
// Get cummulative retail ownership value in Milyar Rp
//
function stBdGetRetailCumValue(start_date_str)
{
	cumBuyValue = stBdGetRetailCumBuyValue(start_date_str);
	cumSellValue = stBdGetRetailCumSellValue(start_date_str);
	result = cumBuyValue - cumSellValue;
	result = stShiftPositive(result);
	return result;
}

//
// Get cummulative retail buy volume in shares
//
function stBdGetRetailCumBuyShares(start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N(sql = "   SELECT @running_total := @running_total + SUM(int_buy_vol) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N(sql = "   SELECT @running_total := @running_total + SUM(day_buy_vol) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	}
	
	varName = "BdCumBuyShares-Retail";
	result = stCachedSQL(varName, sql);
	return result;
}

//
// Get cummulative retail sell volume in shares
//
function stBdGetRetailCumSellShares(start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N(sql = "   SELECT @running_total := @running_total + SUM(int_sell_vol) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
		
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N(sql = "   SELECT @running_total := @running_total + SUM(day_sell_vol) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	}
	
	varName = "BdCumSellShares-Retail";
	result = stCachedSQL(varName, sql);
	return result;
}

//
// Get cummulative retail ownership in shares
//
function stBdGetRetailCumShares(start_date_str)
{
	cumBuyShares = stBdGetRetailCumBuyShares(start_date_str);
	cumSellShares = stBdGetRetailCumSellShares(start_date_str);
	result = cumBuyShares - cumSellShares;
	result = stShiftPositive(result);
	return result;
}

//
// Get average price of retail.
// This also sets stBdRetailProfit global variable.
//
function stBdGetRetailAvgPrice(start_date_str)
{
	global stBdRetailProfit;
	
	cumBuyValue = stBdGetRetailCumBuyValue(start_date_str) * MILYAR;
	buyValue = stGetIntervalFromCum(cumBuyValue);
	cumBuyShares = stBdGetRetailCumBuyShares(start_date_str);
	buyShares = stGetIntervalFromCum(cumBuyShares);
	cumSellValue = stBdGetRetailCumSellValue(start_date_str) * MILYAR;
	sellValue = stGetIntervalFromCum(cumSellValue);
	cumSellShares = stBdGetRetailCumSellShares(start_date_str);
	sellShares = stGetIntervalFromCum(cumSellShares);
	
	avgPrice = stGetAvgPriceDaily(buyValue, buyShares, sellValue, sellShares);
	stBdRetailProfit = stProfit;
	
	return avgPrice;
}

//
// Get cummulative non-retail ownership value in Milyar Rp
//
function stBdGetNonRetailCumValue(start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N(sql = "   SELECT @running_total := @running_total + SUM(int_net_value) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker NOT IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N(sql = "   SELECT @running_total := @running_total + SUM(day_net_value) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker NOT IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	}
	
	varName = "BdCumValue-NonRetail";
	result = stCachedSQL(varName, sql) / MILYAR;
	result = stShiftPositive(result);
	return result;
}

//
// Get cummulative retail ownership in shares
//
function stBdGetNonRetailCumShares(start_date_str)
{
	if (Interval() < inDaily) {
		_N(start_date_str = stBdGetStartDate(0));
		_N(sql = "   SELECT @running_total := @running_total + SUM(int_net_vol) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker NOT IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	} else {
		if (Interval() > inDaily) {
			stAlert("Error: Interval greater than daily is not supported yet!");
		}
		_N(sql = "   SELECT @running_total := @running_total + SUM(day_net_vol) AS cumulative_sum, \n" + 
				 "          dtime \n" + 
				 "     FROM v_adj_intraday_broker2 t \n" + 
				 "		JOIN (SELECT @running_total := 0.0) r \n" + 
				 "	   WHERE nationality = 'A' AND board = 'R' \n" + 
				 "		 AND ticker = '" + Name() + "' \n" + 
				 "		 AND broker NOT IN (" + ST_RETAIL_BROKERS + ") \n" + 
				 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
				 stSQLDateTimeFilter() +
				 "	GROUP BY dtime \n" + 
				 "	ORDER BY t.dtime ASC \n");
	}
	
	varName = "BdCumShares-NonRetail";
	result = stCachedSQL(varName, sql);
	result = stShiftPositive(result);
	return result;
}

/////////////////////////////////////////////////////////////////////////////////////////////////
//
// Multiple brokers system
//
////////////////////////////////////////////////////////////////////////////////////////////////

// Convert list of tokens into SQL list, trimming whitespaces when necessary
// Eg: "one, two,three" --> 'one', 'two', 'three'
function strListToSqlList(lst)
{
    result = "";
    
    cnt = StrCount(lst, ",");
    for (i=0; i < cnt; ++i) {
        token = StrTrim(StrExtract(lst, i), "");
        result = result + "'" + token + "'";
        
        if (i != cnt-1)
            result = result + ", ";
    }
    return result;
}

//
// Get cummulative multiple brokers buy value in Milyar Rp
//
function stBdGetMultiBrokersCumBuyValue(broker_list, start_date_str)
{
    sql_brokers = strListToSqlList(broker_list);
    
    if (Interval() < inDaily) {
        _N(start_date_str = stBdGetStartDate(0));
        _N(sql = "   SELECT @running_total := @running_total + SUM(int_buy_value) AS cumulative_sum, \n" + 
                 "          dtime \n" + 
                 "     FROM v_adj_intraday_broker2 t \n" + 
                 "      JOIN (SELECT @running_total := 0.0) r \n" + 
                 "     WHERE nationality = 'A' AND board = 'R' \n" + 
                 "       AND ticker = '" + Name() + "' \n" + 
                 "       AND broker IN (" + sql_brokers + ") \n" + 
                 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
                 stSQLDateTimeFilter() +
                 "  GROUP BY dtime \n" + 
                 "  ORDER BY t.dtime ASC \n");
    } else {
        if (Interval() > inDaily) {
            stAlert("Error: Interval greater than daily is not supported yet!");
        }
        _N(sql = "   SELECT @running_total := @running_total + SUM(day_buy_value) AS cumulative_sum, \n" + 
                 "          dtime \n" + 
                 "     FROM v_adj_intraday_broker2 t \n" + 
                 "      JOIN (SELECT @running_total := 0.0) r \n" + 
                 "     WHERE nationality = 'A' AND board = 'R' \n" + 
                 "       AND ticker = '" + Name() + "' \n" + 
                 "       AND broker IN (" + sql_brokers + ") \n" + 
                 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
                 stSQLDateTimeFilter() +
                 "  GROUP BY dtime \n" + 
                 "  ORDER BY t.dtime ASC \n");
    }
    
    varName = "BdCumBuyValue-MultiBrokers";
    result = stCachedSQL(varName, sql) / MILYAR;
    return result;
}

//
// Get cummulative multiple brokers sell value in Milyar Rp
//
function stBdGetMultiBrokersCumSellValue(broker_list, start_date_str)
{
    sql_brokers = strListToSqlList(broker_list);
    
    if (Interval() < inDaily) {
        _N(start_date_str = stBdGetStartDate(0));
        _N(sql = "   SELECT @running_total := @running_total + SUM(int_sell_value) AS cumulative_sum, \n" + 
                 "          dtime \n" + 
                 "     FROM v_adj_intraday_broker2 t \n" + 
                 "      JOIN (SELECT @running_total := 0.0) r \n" + 
                 "     WHERE nationality = 'A' AND board = 'R' \n" + 
                 "       AND ticker = '" + Name() + "' \n" + 
                 "       AND broker IN (" + sql_brokers + ") \n" + 
                 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
                 stSQLDateTimeFilter() +
                 "  GROUP BY dtime \n" + 
                 "  ORDER BY t.dtime ASC \n");
    } else {
        if (Interval() > inDaily) {
            stAlert("Error: Interval greater than daily is not supported yet!");
        }
        _N(sql = "   SELECT @running_total := @running_total + SUM(day_sell_value) AS cumulative_sum, \n" + 
                 "          dtime \n" + 
                 "     FROM v_adj_intraday_broker2 t \n" + 
                 "      JOIN (SELECT @running_total := 0.0) r \n" + 
                 "     WHERE nationality = 'A' AND board = 'R' \n" + 
                 "       AND ticker = '" + Name() + "' \n" + 
                 "       AND broker IN (" + sql_brokers + ") \n" + 
                 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
                 stSQLDateTimeFilter() +
                 "  GROUP BY dtime \n" + 
                 "  ORDER BY t.dtime ASC \n");
    }
    
    varName = "BdCumSellValue-MultiBrokers";
    result = stCachedSQL(varName, sql) / MILYAR;
    return result;
}

//
// Get cummulative multiple brokers ownership value in Milyar Rp
//
function stBdGetMultiBrokersCumValue(broker_list, start_date_str)
{
    cumBuyValue = stBdGetMultiBrokersCumBuyValue(broker_list, start_date_str);
    cumSellValue = stBdGetMultiBrokersCumSellValue(broker_list, start_date_str);
    result = cumBuyValue - cumSellValue;
    result = stShiftPositive(result);
    return result;
}

//
// Get cummulative multiple brokers buy volume in shares
//
function stBdGetMultiBrokersCumBuyShares(broker_list, start_date_str)
{
    sql_brokers = strListToSqlList(broker_list);
    
    if (Interval() < inDaily) {
        _N(start_date_str = stBdGetStartDate(0));
        _N(sql = "   SELECT @running_total := @running_total + SUM(int_buy_vol) AS cumulative_sum, \n" + 
                 "          dtime \n" + 
                 "     FROM v_adj_intraday_broker2 t \n" + 
                 "      JOIN (SELECT @running_total := 0.0) r \n" + 
                 "     WHERE nationality = 'A' AND board = 'R' \n" + 
                 "       AND ticker = '" + Name() + "' \n" + 
                 "       AND broker IN (" + sql_brokers + ") \n" + 
                 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
                 stSQLDateTimeFilter() +
                 "  GROUP BY dtime \n" + 
                 "  ORDER BY t.dtime ASC \n");
    } else {
        if (Interval() > inDaily) {
            stAlert("Error: Interval greater than daily is not supported yet!");
        }
        _N(sql = "   SELECT @running_total := @running_total + SUM(day_buy_vol) AS cumulative_sum, \n" + 
                 "          dtime \n" + 
                 "     FROM v_adj_intraday_broker2 t \n" + 
                 "      JOIN (SELECT @running_total := 0.0) r \n" + 
                 "     WHERE nationality = 'A' AND board = 'R' \n" + 
                 "       AND ticker = '" + Name() + "' \n" + 
                 "       AND broker IN (" + sql_brokers + ") \n" + 
                 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
                 stSQLDateTimeFilter() +
                 "  GROUP BY dtime \n" + 
                 "  ORDER BY t.dtime ASC \n");
    }
    
    varName = "BdCumBuyShares-MultiBrokers";
    result = stCachedSQL(varName, sql);
    return result;
}

//
// Get cummulative multiple brokers sell volume in shares
//
function stBdGetMultiBrokersCumSellShares(broker_list, start_date_str)
{
    sql_brokers = strListToSqlList(broker_list);
    
    if (Interval() < inDaily) {
        _N(start_date_str = stBdGetStartDate(0));
        _N(sql = "   SELECT @running_total := @running_total + SUM(int_sell_vol) AS cumulative_sum, \n" + 
                 "          dtime \n" + 
                 "     FROM v_adj_intraday_broker2 t \n" + 
                 "      JOIN (SELECT @running_total := 0.0) r \n" + 
                 "     WHERE nationality = 'A' AND board = 'R' \n" + 
                 "       AND ticker = '" + Name() + "' \n" + 
                 "       AND broker IN (" + sql_brokers + ") \n" + 
                 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
                 stSQLDateTimeFilter() +
                 "  GROUP BY dtime \n" + 
                 "  ORDER BY t.dtime ASC \n");
        
    } else {
        if (Interval() > inDaily) {
            stAlert("Error: Interval greater than daily is not supported yet!");
        }
        _N(sql = "   SELECT @running_total := @running_total + SUM(day_sell_vol) AS cumulative_sum, \n" + 
                 "          dtime \n" + 
                 "     FROM v_adj_intraday_broker2 t \n" + 
                 "      JOIN (SELECT @running_total := 0.0) r \n" + 
                 "     WHERE nationality = 'A' AND board = 'R' \n" + 
                 "       AND ticker = '" + Name() + "' \n" + 
                 "       AND broker IN (" + sql_brokers + ") \n" + 
                 "      AND dtime >= '" + start_date_str + " 00:00:00' \n" +
                 stSQLDateTimeFilter() +
                 "  GROUP BY dtime \n" + 
                 "  ORDER BY t.dtime ASC \n");
    }
    
    varName = "BdCumSellShares-MultiBrokers";
    result = stCachedSQL(varName, sql);
    return result;
}

//
// Get cummulative multiple brokers ownership in shares
//
function stBdGetMultiBrokersCumShares(broker_list, start_date_str)
{
    cumBuyShares = stBdGetMultiBrokersCumBuyShares(broker_list, start_date_str);
    cumSellShares = stBdGetMultiBrokersCumSellShares(broker_list, start_date_str);
    result = cumBuyShares - cumSellShares;
    result = stShiftPositive(result);
    return result;
}

//
// Get average price of multiple brokers.
// This also sets stBdMultiBrokersProfit global variable.
//
function stBdGetMultiBrokersAvgPrice(broker_list, start_date_str)
{
    global stBdMultiBrokersProfit;
    
    cumBuyValue = stBdGetMultiBrokersCumBuyValue(broker_list, start_date_str) * MILYAR;
    buyValue = stGetIntervalFromCum(cumBuyValue);
    cumBuyShares = stBdGetMultiBrokersCumBuyShares(broker_list, start_date_str);
    buyShares = stGetIntervalFromCum(cumBuyShares);
    cumSellValue = stBdGetMultiBrokersCumSellValue(broker_list, start_date_str) * MILYAR;
    sellValue = stGetIntervalFromCum(cumSellValue);
    cumSellShares = stBdGetMultiBrokersCumSellShares(broker_list, start_date_str);
    sellShares = stGetIntervalFromCum(cumSellShares);
    
    avgPrice = stGetAvgPriceDaily(buyValue, buyShares, sellValue, sellShares);
    stBdMultiBrokersProfit = stProfit;
    
    return avgPrice;
}
