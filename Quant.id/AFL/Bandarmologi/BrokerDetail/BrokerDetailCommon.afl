/* 
 * Copyright (C)2017 PT. Stosia Teknologi Investasi
 *
 * This file is licensed under  GNU GPL (General Public License) version 3.
 *
 * File ini dilisensikan kepada Anda, bukan  Anda miliki.  Pemilik file ini
 * adalah pemegang  hak cipta ("copyright holder") di atas. Gunakanlah file
 * ini sesuai dengan lisensi yang telah ditetapkan untuk file ini.
 *
 * File ini  berlisensi  GNU GPL (General Public License)  versi 3. Artinya
 * kalau Anda  memodifikasi file ini, atau membuat karya lain yang berbasis
 * file ini  ("derivative work"),  maka Anda  wajib  mendistribusikan  kode
 * modifikasi atau karya tersebut kepada publik. Hal ini untuk menjaga agar
 * pengetahuan yang ada di sini menjadi lebih berkembang  di masa mendatang 
 * untuk kemajuan kita bersama.
 *
 * Silakan memakai kode ini untuk kepentingan apapun termasuk untuk mencari
 * profit di pasar saham baik secara perorangan atau organisasi, asal tidak
 * jahat. Sebagai tambahan permintaan, kami menghimbau untuk TIDAK  menjual
 * kode/file  ini secara  apa adanya  atau dalam bundel  produk yang dijual
 * secara komersial, karena hal itu tidak etis.
 *
 * Untuk penjelasan lebih lanjut silakan bertanya kepada kami.  Untuk detil
 * lisensi GPLv3  silakan lihat file GPLv3-LICENSE.md  yang didistribusikan
 * bersama file ini.
 *
 * Author: Benny Prijono <benny@stosia.com>
 * Contributors:
 *  - 
 */
#include_once <..\Quant.id\AFL\Bandarmologi\BandarmologiCommon.afl>

// Global vars
// Broker name which details are being displayed
_N(stBrokerName = "");

// Date to calculate broker statistics
_N(stBrokerStartDate = "");

//
// Init broker detail pane, either as master or as slave
//
function stInitBrokerDetail(as_master)
{
	global brokerName, stBrokerStartDate, stBdParamUseValue, stBdInvertBroker;
	
	_N(chartId = "BrokerDetail");
	
	if (as_master) {
	
		// Get broker name from parameter
		_SECTION_BEGIN("Broker Detail");
			_N(stBrokerName = ParamStr("Broker Code", ""));
			startDate = ParamDate("Start Date", "2016-01-01", 0);
			_N(stBrokerStartDate = stDateNumToISODate(startDate));
			stBdParamUseValue = ParamToggle("Use Value or Lot", "Lot|Value", 1);
			stBdInvertBroker = ParamToggle("Inverted Holding", "No|Yes", 0);
		_SECTION_END();
	
		// And set to static var to be read by slave panes
		StaticVarSetText("stBrokerName", stBrokerName);
		StaticVarSetText("stBrokerStartDate", stBrokerStartDate);
		StaticVarSet("stBdParamUseValue", stBdParamUseValue);
		StaticVarSet("stBdInvertBroker", stBdInvertBroker);
		stMasterChartSignalReady(chartId);
	
	} else {
		stSlaveChartWaitReady(chartId, 10);
		
		_N(stBrokerName = StaticVarGetText("stBrokerName"));
		_N(stBrokerStartDate = StaticVarGetText("stBrokerStartDate"));
		stBdParamUseValue = StaticVarGet("stBdParamUseValue");
		stBdInvertBroker = StaticVarGet("stBdInvertBroker");
	}
}
