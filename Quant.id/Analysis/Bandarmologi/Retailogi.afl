/* 
 * Copyright (C)2017 PT. Stosia Teknologi Investasi
 *
 * This file is licensed under  GNU GPL (General Public License) version 3.
 *
 * File ini dilisensikan kepada Anda, bukan  Anda miliki.  Pemilik file ini
 * adalah pemegang  hak cipta ("copyright holder") di atas. Gunakanlah file
 * ini sesuai dengan lisensi yang telah ditetapkan untuk file ini.
 *
 * File ini  berlisensi  GNU GPL (General Public License)  versi 3. Artinya
 * kalau Anda  memodifikasi file ini, atau membuat karya lain yang berbasis
 * file ini  ("derivative work"),  maka Anda  wajib  mendistribusikan  kode
 * modifikasi atau karya tersebut kepada publik. Hal ini untuk menjaga agar
 * pengetahuan yang ada di sini menjadi lebih berkembang  di masa mendatang 
 * untuk kemajuan kita bersama.
 *
 * Silakan memakai kode ini untuk kepentingan apapun termasuk untuk mencari
 * profit di pasar saham baik secara perorangan atau organisasi, asal tidak
 * jahat. Sebagai tambahan permintaan, kami menghimbau untuk TIDAK  menjual
 * kode/file  ini secara  apa adanya  atau dalam bundel  produk yang dijual
 * secara komersial, karena hal itu tidak etis.
 *
 * Untuk penjelasan lebih lanjut silakan bertanya kepada kami.  Untuk detil
 * lisensi GPLv3  silakan lihat file GPLv3-LICENSE.md  yang didistribusikan
 * bersama file ini.
 *
 * Author: Benny Prijono <benny@stosia.com>
 * Contributors:
 *  - 
 */
#include_once <..\Quant.id\AFL\Bandarmologi\BandarmologiCommon.afl>
#include_once <..\Quant.id\AFL\Bandarmologi\Retailogi\RetailogiCommon.afl>

TimeFrameSet(inDaily);

_N( startDate = "2017-01-01");

Score = 0;

yp_balance = stBdGetBrokerCumValue("YP", startDate);
yp_lastNet = LastValue(yp_balance) - yp_balance[BarCount-2];

Filter = !IsEmpty(yp_balance[BarCount-1]);

yp_ma5 = MA(yp_balance, 5);
yp_ma20 = MA(yp_balance, 20);

Score += IIf(yp_lastNet > 0, 1, IIf(yp_lastNet < 0, -1, 0));
Score += IIf(LastValue(yp_balance) > LastValue(yp_ma5), 1, IIf(LastValue(yp_balance) < LastValue(yp_ma5), -1, 0));
Score += IIf(LastValue(yp_ma5) > LastValue(yp_ma20), 1, IIf(LastValue(yp_ma5) < LastValue(yp_ma20), -1, 0));

ret_balance = stBdGetRetailCumValue(startDate);;
ret_lastNet = LastValue(ret_balance) - ret_balance[BarCount-2];

Filter = !IsEmpty(ret_balance[BarCount-1]);

ret_ma5 = MA(ret_balance, 5);
ret_ma20 = MA(ret_balance, 20);

Score += IIf(ret_lastNet > 0, 1, IIf(ret_lastNet < 0, -1, 0));
Score += IIf(LastValue(ret_balance) > LastValue(ret_ma5), 1, IIf(LastValue(ret_balance) < LastValue(ret_ma5), -1, 0));
Score += IIf(LastValue(ret_ma5) > LastValue(ret_ma20), 1, IIf(LastValue(ret_ma5) < LastValue(ret_ma20), -1, 0));

AddColumn(Score, "Score");
AddColumn(yp_balance, "YP-Balance", 1.3);
AddColumn(yp_lastNet, "YP-Last Net", 1.3, IIf(yp_lastNet > 0, colorGreen, IIf(yp_lastNet < 0, colorRed, 0)));
AddColumn(yp_ma5, "YP-ma5", 1.3, IIf(yp_balance > yp_ma5, colorGreen, IIf(yp_balance < yp_ma5, colorRed, 0)));
AddColumn(yp_ma20, "YP ma20", 1.3, IIf(yp_ma5 > yp_ma20, colorGreen, IIf(yp_ma5 < yp_ma20, colorRed, 0)));
AddColumn(ret_balance, "Ret-Balance", 1.3);
AddColumn(ret_lastNet, "Ret-Last Net", 1.3, IIf(ret_lastNet > 0, colorGreen, IIf(ret_lastNet < 0, colorRed, 0)));
AddColumn(ret_ma5, "Ret-ma5", 1.3, IIf(ret_balance > ret_ma5, colorGreen, IIf(ret_balance < ret_ma5, colorRed, 0)));
AddColumn(ret_ma20, "Ret ma20", 1.3, IIf(ret_ma5 > ret_ma20, colorGreen, IIf(ret_ma5 < ret_ma20, colorRed, 0)));
