/*
//------------------------------------------------------------------------------
//
//  Formula Name: QIFA - Quarterly Trend Ver. 1.0 (Quantitative Intelligent Fundamental Analysis)
//  Author		: Isnandar 
//  E-mail		: isnandar2009@gmail.com
//  Url			: QISignal.com
//  Date		: May 2016
//  Flags		: Indicator & Exploration
//  
//------------------------------------------------------------------------------
*/

/*
Disclaimer :
	Data maupun rekomendasi yang dihasilkan oleh Quantitative Intelligent Fundamental Analysis (QIFA) berdasarkan Financial Data, dan merupakan informasi semata. 
	Segala keputusan dalam membeli atau menjual saham memiliki resiko yang harus dipahami sebelum pengambilan keputusan.
	QISignal.com sebagai penyedia data dan pengembang QIFA tidak bertanggung jawab terhadap kerugian baik langsung maupun 
	tidak langsung yang timbul dari tindakan membeli atau menjual saham.
	
	Rencanakan investasi anda dengan manajemen yang baik. 
	Setiap keputusan investasi menjadi tanggung jawab pemilik investasi atau pemilik modal.
*/

/*
New Update :

v.1.0 : 2016-05-17
- Exploration

*/


AflTitle = "QIFA - Quarterly Trend Ver.1.0";

countDrawBar = 8; //6

plPeriodType = "Quarterly";
period = Hor= 2;

plFinancial = ParamList("Financials","EPS|RevenuePerShare|GrossProfitPerShare|TotalAssets|TotalLiabilities|TotalEquity|OperatingCashFlow|NetIncome",0);
QIFA = QIsnFAHistory(plFinancial,plPeriodType,period);

if( Status("action") == actionExplore || IsIndex()) 
	titleheader = "" ;
else
	titleheader = QIsnFA("Asofdate")+"      "+Name()+ " - "+ plFinancial ;


PriceScale = 1;
plScale = ParamList("Amount (Rp.) ","In Million|In Billion|In Trillion",1);
if(plFinancial == "CurrentAssets" || plFinancial == "TotalAssets" || plFinancial == "CurrentLiabilities" || plFinancial == "TotalLiabilities" || 
				plFinancial == "TotalEquity" || plFinancial == "OperatingCashFlow" || plFinancial == "NetIncome")
{
	PriceScale = IIf(plScale=="In Billion",1000,IIf(plScale=="In Trillion",1000000,1)) ; //In Bio
}

ShowGridLine = ParamToggle("Show Grid ?","Yes|No",0);
	
FinQtr = 0;
QtrBar = 8; //5
LastQIFA = 0 ;
for( i = 0; i < BarCount; i++ )
{
	iBar=BarCount-(i+1);
	if( ( QIFA[ iBar ] / PriceScale ) != LastQIFA ) 
	{
		FinQtr = QIFA[ iBar ] / PriceScale ;
		VarSet("FinQtr" + QtrBar, FinQtr );
		LastQIFA = FinQtr ;
		QtrBar--;
		if(QtrBar<1) break;
	}	
			
}


GfxSetOverlayMode( 2 );
CellHeight = (Status("pxheight")-1)/3; 
CellWidth = (Status("pxwidth")-1)/3;//14; 
CellQtrWidth = (Status("pxwidth")-1)/(4+1); 
GfxSelectFont( "Tahoma", 8.5 ); 
GfxSelectSolidBrush( colorDarkOliveGreen );
GfxRectangle( 0, 0, Status("pxwidth"), Status("pxheight"));
GfxSetBkMode( 1 );


YOffset = 25;
XOffset = 15;

function PrintQtrInCell( string, row, Col ) 
{
 Color =  ColorRGB( IIf( row == 0 || col == 0 || col == 13, 220, 255 ), 255, IIf( row % 2, 255, 220 ) );
 GfxSelectSolidBrush( Color   );

  GfxSetTextColor( colorBlue ); 
  GfxDrawText( string, Col * CellQtrWidth + 1 + CellWidth, row * CellHeight + 1, CellWidth + (Col + 1 ) * CellQtrWidth, (row + 1 ) * CellHeight, 32+5 ); //32+5
} 

function DrawBar( text, bar, numbars, y, Miny, Maxy )
{
 BarWidth = (Status("pxwidth") - 4 * XOffset )/( numbars + 1 ); 
 BarHeight = Status("pxheight") - 2 * YOffset;
 relpos = ( y - Miny ) / (Maxy - Miny );

 xp = XOffset + ( bar + 0.5 ) * BarWidth;
 yp = YOffset + BarHeight * ( 1 - relpos );
 xe = XOffset + ( bar + 1 ) * BarWidth;
 ye = YOffset + BarHeight * ( 1 - ( -miny )/( maxy - miny ) );
  
 if( y > 0 )
 {
	//GfxGradientRect( xp, yp, xe , ye, ColorHSB( 70, 255 * relpos, 255 ), ColorHSB( 70, 20, 255 ) ); 
	GfxGradientRect( xp, yp, xe , ye, colorGreen, colorGreen ); 
	GfxSetTextColor( ColorHSB( 60, 20, 255 ) );
	GfxTextOut( text, xp, ye ); //Annually or Quarterly
	
 	//GfxSetTextColor( colorBlack );
 	GfxSelectPen( colorBrightGreen, 1, 2 );  
	GfxTextOut( StrFormat("%.2f", y ), xp, yp );
 }
 else
 {
	//GfxGradientRect( xp, ye, xe , yp, ColorHSB( 0, 20, 255 ), ColorHSB( 0, 255 * ( 1 - relpos ), 255 ) ); 
	GfxGradientRect( xp, ye, xe , yp, colorRed, colorRed ); 
 	GfxTextOut( text, xp, ye ); //Annually or Quarterly
	GfxTextOut( StrFormat("%.2f", y ), xp, yp );
 }
}    

function DrawLevels( Miny, Maxy )
{
  range = Maxy - Miny;

  grid = 100;
  if( range < 10 ) grid = 1;
  else 
  if( range < 20 ) grid = 2;
  else 
  if( range < 50 ) grid = 5;
  else 
  if( range < 100 ) grid = 10;
  else 
  if( range < 200 ) grid = 20;
  else 
  if( range < 500 ) grid = 50;
  else 
  if( range < 1000 ) grid = 100;
  else 
  if( range < 5000 ) grid = 500;
  else 
  if( range < 10000 ) grid = 1000;
  else 
  if( range < 30000 ) grid = 3000;
  else 
  if( range < 50000 ) grid = 5000;
  else 
  if( range < 100000 ) grid = 10000;
  else 
  if( range < 1000000 ) grid = 100000;
  else 
  if( range < 5000000 ) grid = 500000;

  _TRACE("grid = "+grid +" range "+range );
  
  width = Status("pxwidth") - 4 * XOffset;
  height = Status("pxheight") - 2 * YOffset;
  
     
  GfxSelectPen( colorBlack, 1, 2 );
  for( y = grid * ceil( Miny / grid ); y <= grid * floor( Maxy / grid ); y += grid )
  {
    yp =  YOffset + Height * ( 1 -  ( y - Miny ) / (Maxy - Miny ) );

    GfxMoveTo( XOffset, yp );
    
    if(ShowGridLine==1) GfxLineTo( XOffset + width , yp );
    
    GfxTextOut( " "+ y, XOffset + 2 + width, yp );
  }
  GfxSelectPen( colorBlack, 1, 0 );
  GfxMoveTo( XOffset, YOffset );
  GfxLineTo( XOffset + width, YOffset );
  GfxLineTo( XOffset + width, YOffset + Height );
  GfxLineTo( XOffset , YOffset + Height );
  GfxLineTo( XOffset , YOffset );
}


function DisplayQuarterTrend()
{
	Bar = 0;
 
	MinAvgProf = MaxAvgProf = 0;


	for( m = QtrBar+1; m <= countDrawBar; m++ )
	{
		FinQtr = VarGet("FinQtr" + m );
		MinAvgProf = Min( MinAvgProf, FinQtr );
		MaxAvgProf = Max( MaxAvgProf, FinQtr );
	}
	
	for( m = QtrBar+1; m <= countDrawBar; m++ )
	{
		FinQtr = VarGet("FinQtr" + m ) ;
		DrawBar( QIsnMRQ("AsOfDate",(countDrawBar-m)*-1), Bar++, countDrawBar, FinQtr, MinAvgProf , MaxAvgProf );
	}
 
	TitleWidth = (Status("pxwidth")-1)/4;

	GfxSetTextColor( colorYellow );
	GfxSelectFont( "Tahoma", 10 ); 
	GfxTextOut(AflTitle, 15, 5 );

	GfxSetTextColor( colorAqua );
	GfxTextOut(titleheader, 15+TitleWidth, 5 );
	GfxSetTextColor( colorWhite );
	
	if( plFinancial == "EPS" )
	{
		mQtrEarningGrowth = QIsnFA("QEG");
		mYoyEarningGrowth = QIsnFA("YOYEG");
		if(!IsNull(mQtrEarningGrowth)) GfxTextOut( "MRQ vs Qtr.1Yr.Ago = "+StrFormat("%.2f",mQtrEarningGrowth)+"%", 15+(TitleWidth*2), 5 );
		if(!IsNull(mYoyEarningGrowth)) GfxTextOut( "TTM vs TTM 1Yr.Ago = "+StrFormat("%.2f",mYoyEarningGrowth)+"%", 15+(TitleWidth*3), 5 );
	}
	if( plFinancial =="RevenuePerShare" )
	{
		mQtrRevenueGrowth = QIsnFA("QRG");
		mYoyRevenueGrowth = QIsnFA("YOYRG");
		if(!IsNull(mQtrRevenueGrowth)) GfxTextOut( "MRQ vs Qtr.1Yr.Ago = "+StrFormat("%.2f",mQtrRevenueGrowth)+"%", 15+(TitleWidth*2), 5 );    
		if(!IsNull(mYoyRevenueGrowth)) GfxTextOut( "TTM vs TTM 1Yr.Ago = "+StrFormat("%.2f",mYoyRevenueGrowth)+"%", 15+(TitleWidth*3), 5 );    
	} 

	DrawLevels( MinAvgProf , MaxAvgProf ); 
}


/* Main program */
if(!IsIndex()) 
{DisplayQuarterTrend();}
else{
	GfxSelectFont("Tahoma", 10, 100);
	GfxSetTextColor(colorYellow); 		
	GfxTextOut("Symbol: "+Name(), 5, 5 ); 
	GfxTextOut("QIFA - Quarterly Trend: N/A", 5, 25 ); 
	GfxSetTextColor(colorDefault); 
	GfxSelectFont("Verdana", 8, 100);
}

